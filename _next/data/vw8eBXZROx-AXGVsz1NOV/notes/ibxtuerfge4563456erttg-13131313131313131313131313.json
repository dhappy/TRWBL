{"pageProps":{"note":{"id":"ibxtuerfge4563456erttg-13131313131313131313131313","title":"To @Omka & to @lerner concerning program ideas","desc":"","updated":1730223712004,"created":1730223712004,"nav_order":120,"custom":{"nav_order":120},"fname":"writings.discord.2024⁄10⁄29≣-0.5⁄365¼⁄♎⁄8.to-Omka-on-local-device-finding","type":"note","vault":{"fsPath":".","selfContained":true,"name":"TRWBL"},"contentHash":"e4e69dc4bc76edefdabb7dff68b775a4","links":[],"anchors":{},"children":[],"parent":"ymwaup9sk5sw7lmnsfgej2b","data":{}},"body":"<h1 id=\"to-omka--to-lerner-concerning-program-ideas\">To @Omka &#x26; to @lerner concerning program ideas<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#to-omka--to-lerner-concerning-program-ideas\"></a></h1>\n<p>Ok, the online classroom is definitely an idea that's come, but unfortunately that's evidinced by a bunch of serious players on the scene.</p>\n<p>I'd like to take a little time &#x26; try to write two apps I've been contemplating for doing local “Find My Device” that would work without Internet.</p>\n<p>The core application published an mDNS entry with:\n● the port it is listening on with a Quic <em>(HTTP/3)</em> server on both TCP &#x26; UDP\n● a nonce it created\n● a signature over that port &#x26; nonce from which its public key can be derived</p>\n<p>mDNS is broadcast into the local network &#x26; and visible to everyone on the LAN, so anyone local should be able to talk to that server.</p>\n<p>I want to then create a Gossipsub network, like is used to back IPFS, to get those machines talking to each other.</p>\n<p>So the app listens on its Quic servers, and can receive instruction that are theoretically safe so long as the sanctity of the local network is not compromised.</p>\n<p>More sophistocated levels of trust are built on top of the base certainty that you are more than likely dealing with a single persistent other party through time.</p>\n<p>So, after Bob proves his identity to Alice through some third party channel <em>(like Signal, you</em> need <em>to install Signal)</em>, she'll know it's him consistently in the future, because all messages are signed with the key Bob included as part of his mDNS entry.</p>\n<p><em>(The actual key exchange might involve the peer ids used by IPFS nodes. You can see one in the screenshot below… I'm not sure exactly what they entail. They might just be a public key, but I don't want to just publish a key, it needs to be a signature so I prove I have it.)</em></p>\n<p>One of the commands, could be, \"play your speaker really loud for ten minutes or until someone picks you up\".</p>\n<p>There's really two separate programs: one for receiving instructions &#x26; one for sending them. I would like the server to be either a Node.js or Rust application. I'd really like for it to be Rust, intimidating though that be.</p>\n<p>One of the core topics in this Gossipsub network are information about updates to the CAR-encoded CBOR DAGs associated with updates to a shared context tree.</p>\n<p>Information is dispersed by creating new connections within the network. Rather than transferring files a connection is made within the users context tree providing informed access to some new datum.</p>\n<p>The are two options for how the CAR files will be packed. I can <em>either</em> take two DAGs with lots of different changes &#x26; generate the nodes of a CBOR <em>(binary cousin of JSON)</em> DAG where the CAR file is a collection of all those changes in a bundle. This model is something akin to <code>commit</code> points in the <code>git</code> workflow. The alternative is to put each node in it's own CAR file &#x26; insert it independently.</p>\n<p>The first way is much more efficient, and it allows related changes to move together. The second, I think, is online traversable in a way the other isn't. Really there's places for both methods.</p>\n<p>In any case, these two servers will talk to each other &#x26; exchange some trees of descriptors where <em>all</em> coherent paths are meant to resolve &#x26; partially-coherent paths will generate an ordered list of possibilities.</p>\n<p>It's sort of like a normal directory tree, except all the context information is present in the path. You would write <code>.../book/by/Charles Stross/Lobsters/epub.epub</code> or <code>.../book/Charles Stross ― Accelerando/html.html</code> or <code>.../collection/World's Best Science Fiction 1987/4/Charlse Stross ― Overtime</code>. <em>(I have to repeat the extension twice because currently alot of programs get grumpy without them.)</em></p>\n<p>This massive DAG that's getting broadcast all over the local network can be used for message passing in a public forum ala. Discord.</p>\n<p>You could create a Markdown file and store it in a location like <code>.../messenges/to/@Omka/56/md.md</code> which is also linked to by <code>.../messenges/to/@Omka/2024⁄10⁄29@4ʜ77.337/md.md</code>. One of the programs processing information for the Qwik listeners can watch the network for broadcasts of new additions to a directory when it's alphabetically sorted. <em>(The second date formatted entry alphabetically sorts with newest last, so when a new tail end of the list appears on the network, a program is executed to deliver that message.)</em></p>\n<p>I want to do the current notifications bar on the phone with the swipe to dismiss behavior, but I want to make it much more picture oriented.</p>\n<p>The particularly interesting software though is to aid with a transaction flow I've been developing for person-to-person transactions. The buyer inputs their offer price, the seller puts in the number of units they want, and a total is calculated. Afterward, the price is then written as <code>&#x3C;amount paid> = &#x3C;market price> - &#x3C;discount> - &#x3C;outstanding debt></code> where <code>&#x3C;market price> = &#x3C;asking price ⅌> * &#x3C;number of units></code>, so Candy did <code>$490 = $497½ - $7½</code> or paid me <code>$490</code> for <code>$497½</code> worth of stuff &#x26; I have a sheet of paper where I wrote the price ⅌ &#x26; she wrote the number taken.</p>\n<p>Finally, the seller puts in how much money they verify that they received &#x26; everyone signs the whole transaction.</p>\n<p>I want to do a digital version of this, but I'd really like to do a dynamic SVG version where the digital signatures are embedded in an SVG showing the reciept as well as customizably positions individualized logos for the involved parties.</p>\n<p>Where I'd really like to go with it is to tie Optimism in as a way to make payments. The receipt could be automatically generated upon reception of a payment to an address. Optimism or Filecoin's network <em>(I like the idea of working in Rust)</em>, or IOTA. <em>(I still think IOTA could be the breakout winner in the crypro wars because it is WASM compatible</em> (like Filecoin) <em>&#x26; it doesn't use a blockchain. Message senders randomly verify some number of messages that came beforehand. The most messages going out the more verifiers.)</em> Definitely Monero. :catsmile:. Something digital.</p>\n<p>Ultimately, where I want to go with this is buyer &#x26; seller transact online &#x26;, post payment, the seller drops the purchase into a blind courier network that gets it to the seller.</p>\n<p>I'd really like to try and do a Flutter app <em>(which would be written in Dart)</em>. Particularly, I am thinking about trying to do a Dart implementation of the <a href=\"https://storacha.network\">Storacha</a> program <a href=\"https://github.com/storacha/specs/blob/4163e28d7e6a7c44cff68db9d9bffb9b37707dc6/pail.md\"><code>pail</code></a> which is a key-value store distributed as a CBOR DAG. I'm still digging into how it works, but a Dart implementation would let me use it in my Flutter app.</p>\n<p>What I was thinking about doing first is a Flutter version of <a href=\"/\">small caps</a> which will give different Unicode equivalents for strings. Like I might type in “small caps” &#x26; it'll give me: . I think maybe it'd be better if my first Flutter app wasn't the DAG transferring program.</p>","noteIndex":{"id":"ycfbd2a8x41gi0smmpufk0o","title":"The Revolution Will Be Live","desc":"","updated":1718781237944,"created":1694056545245,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","selfContained":true,"name":"TRWBL"},"contentHash":"496c7b83c5572fbafa8c883607096c15","links":[{"type":"wiki","from":{"fname":"root","id":"ycfbd2a8x41gi0smmpufk0o","vaultName":"TRWBL"},"value":"13-13s","alias":"Yggdrasil","position":{"start":{"line":12,"column":84,"offset":1103},"end":{"line":12,"column":104,"offset":1123},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"13-13s"}},{"type":"wiki","from":{"fname":"root","id":"ycfbd2a8x41gi0smmpufk0o","vaultName":"TRWBL"},"value":"13-13s.conglomerations.enforcement","alias":"Silver team","position":{"start":{"line":28,"column":7,"offset":2103},"end":{"line":28,"column":57,"offset":2153},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"13-13s.conglomerations.enforcement"}},{"type":"wiki","from":{"fname":"root","id":"ycfbd2a8x41gi0smmpufk0o","vaultName":"TRWBL"},"value":"13-13s.axes.projects","alias":"Code","position":{"start":{"line":31,"column":46,"offset":2721},"end":{"line":31,"column":81,"offset":2756},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"13-13s.axes.projects","anchorHeader":"^code"}}],"anchors":{"bootstrapping":{"type":"header","text":"Bootstrapping","value":"bootstrapping","line":20,"column":0,"depth":2},"synopsis":{"type":"header","text":"Synopsis","value":"synopsis","line":26,"column":0,"depth":2},"how-to-participate":{"type":"header","text":"How to Participate","value":"how-to-participate","line":32,"column":0,"depth":2}},"children":["0kpwtvbizo8p5kwm7ut8z4u","ypu9ulohotwrez78fsejofb","t70n32fovw6k11p2ffwejej","dr794to5a3oswlo3dpjc8kv","z1vxdmccqaly130bi4lbvux","58igihfpbmrzffu4lcjhvdm","w7xdys72fd8agsk83t0vzup","uarrhcqrputtjnlfauy20pq","foqg0ydo49ordemvhk90zoj"],"parent":null,"data":{},"body":"\n_TRWBL_ operates under the assumption at some point in the future homelessness and hunger will be eliminated for at least a whole day.\n\nIt's an attainable goal physically. We have enough shelter and food for everyone to have a share. The real issue would be the logistics. Tracking all the people and tracking where they eat and lodge.\n\nIt'd be alot better if it were a program coming not from the establishment. I want to try and sell black people on a plan for non-violent revolution beginning as a \"black\" club that one only gains membership to by being judged as \"black\" by the existing membership.\n\nOne could have their Black card revoked as social censure. Each team aims to satisfy one of thirteen basic needs. Black people's is drugs. They evolve a market with testing facilities between the production and distribution through blind couriers which doesn't rely on violence to mediate issues.\n\nWe aim to create a rat park where everything's available, but the populace is content enough that they don't abuse.\n\nThe main vehicle for execution is the creation of an augmented reality game called [[Yggdrasil|13-13s]] of which the Black team is one.\n\n## Bootstrapping\n\nConceptually, _TRWBL_ is supposed to bootstrap itself by gaining the support of people who see it as feasible, and, in doing so, gain further followers until there is a steadily growing consensus that to take part in the story will be to find a place in history much like marching at Selma or against Vietnam.\n\nThe desire for historical significance will then be one of the primary drivers for participation, particularly given the large percentage of the activities that will be recorded.\n\n## Synopsis\n\nAn organization funded by the distribution of substances offers a viable alternative to the police in maintenance of a new mechanism for the control of space. Spaces held by the organization make heavy inroads into properties controlled by churches and banks.\n\nThe needs of the network of locations is managed through a 3D interface that also tracks what spaces everyone controls through time.\n\n## How to Participate\n\n* The [[Silver team|13-13s.conglomerations.enforcement]] will need recordings of combatants that are available for rules enforcement.\n* All technological aspects of the system should be open-source. In situations where open solutions don't exist yet, rather than developing new work, whenever possible market pressure will be applied to existing corporations to open their technologies.\n* One of the first fundraisers will be an early prototype of the courier system used to deliver innocuous items such as corn & rock salt. Ownership within the system is represented as an NFT.\n* Money, in general, should be funneled into [[Code|13-13s.axes.projects#^code]] where it will be converted into computer programs to support various aspects of the process.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableExportPodV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":".","selfContained":true,"name":"TRWBL"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enablePersistentHistory":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"dist","seo":{"title":"The Revolution Will Be Live","description":"A Story About Radical Social Change","author":"dysbulic"},"github":{"cname":"notes.trwb.live","enableEditLink":true,"editLinkText":"Edit this page on GitHub.","editBranch":"master","editViewMode":"tree","editRepository":"https://github.com/dhappy/TRWBL/"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"search","siteUrl":"https://notes.trwb.live","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}